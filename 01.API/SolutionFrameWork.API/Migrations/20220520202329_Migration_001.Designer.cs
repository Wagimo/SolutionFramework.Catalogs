// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SolutionFramework.SqlServer;

#nullable disable

namespace SolutionFrameWork.API.Migrations
{
    [DbContext(typeof(SqlServerContext))]
    [Migration("20220520202329_Migration_001")]
    partial class Migration_001
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SolutionFramework.Entities.Entities.Activity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("IdUserCreator")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Activities", (string)null);
                });

            modelBuilder.Entity("SolutionFramework.Entities.Entities.ApproverMatrix", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdArea")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IdFirstApprover")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdSecondApprover")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdUserCreator")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("IdArea");

                    b.ToTable("ApproverMatrix", (string)null);
                });

            modelBuilder.Entity("SolutionFramework.Entities.Entities.Area", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("ApprovalLimitAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<Guid>("IdCompany")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IdManager")
                        .HasColumnType("varchar(128)");

                    b.Property<string>("IdUserCreator")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("IdCompany");

                    b.ToTable("Areas", (string)null);
                });

            modelBuilder.Entity("SolutionFramework.Entities.Entities.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fax")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("IdUserCreator")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("LegalRepresentative")
                        .IsRequired()
                        .HasColumnType("varchar(70)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Nit")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Companies", (string)null);
                });

            modelBuilder.Entity("SolutionFramework.Entities.Entities.ContractTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Content")
                        .IsRequired()
                        .HasColumnType("image");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdContractType")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IdUserCreator")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<string>("TemplateName")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("IdContractType");

                    b.ToTable("ContractTemplates", (string)null);
                });

            modelBuilder.Entity("SolutionFramework.Entities.Entities.ContractType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("IdUserCreator")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<int>("TrackingDays")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ContractTypes", (string)null);
                });

            modelBuilder.Entity("SolutionFramework.Entities.Entities.DocumentType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("HasTracking")
                        .HasColumnType("bit");

                    b.Property<string>("IdUserCreator")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("RolResponsible")
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("DocumentTypes", (string)null);
                });

            modelBuilder.Entity("SolutionFramework.Entities.Entities.Duration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdUserCreator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Period")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Duration");
                });

            modelBuilder.Entity("SolutionFramework.Entities.Entities.DurationDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DurationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdDuration")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IdUserCreator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DurationId");

                    b.ToTable("DurationDetail");
                });

            modelBuilder.Entity("SolutionFramework.Entities.Entities.EmailTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<byte[]>("Content")
                        .IsRequired()
                        .HasColumnType("image");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdUserCreator")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("EmailTemplates", (string)null);
                });

            modelBuilder.Entity("SolutionFramework.Entities.Entities.HolyDay", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(150)");

                    b.Property<DateTime>("Holyday")
                        .HasColumnType("datetime");

                    b.Property<string>("IdUserCreator")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("HolyDays", (string)null);
                });

            modelBuilder.Entity("SolutionFramework.Entities.Entities.MenuItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Icon")
                        .HasColumnType("varchar(100)");

                    b.Property<Guid?>("IdParent")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IdUserCreator")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Module")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("OrderIndex")
                        .HasColumnType("int");

                    b.Property<string>("Route")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("MenuItems", (string)null);
                });

            modelBuilder.Entity("SolutionFramework.Entities.Entities.OptionList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(250)");

                    b.Property<string>("FieldType")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("IdUserCreator")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("Private")
                        .HasColumnType("bit");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.HasKey("Id");

                    b.ToTable("OptionList", (string)null);
                });

            modelBuilder.Entity("SolutionFramework.Entities.Entities.OptionListDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdOptionList")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IdUserCreator")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("IdOptionList");

                    b.ToTable("OptionListDetail", (string)null);
                });

            modelBuilder.Entity("SolutionFramework.Entities.Entities.Provider", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("BusinessName")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ClientCode")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("ContactName")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmailLegalRepresentative")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("IdLegalRepresentative")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("IdUserCreator")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("LegalRepresentative")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nit")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Providers", (string)null);
                });

            modelBuilder.Entity("SolutionFramework.Entities.Entities.ApproverMatrix", b =>
                {
                    b.HasOne("SolutionFramework.Entities.Entities.Area", "Area")
                        .WithMany("ApproverMatrix")
                        .HasForeignKey("IdArea")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Area");
                });

            modelBuilder.Entity("SolutionFramework.Entities.Entities.Area", b =>
                {
                    b.HasOne("SolutionFramework.Entities.Entities.Company", "Company")
                        .WithMany("Areas")
                        .HasForeignKey("IdCompany")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("SolutionFramework.Entities.Entities.ContractTemplate", b =>
                {
                    b.HasOne("SolutionFramework.Entities.Entities.ContractType", "ContractType")
                        .WithMany("ContractTemplates")
                        .HasForeignKey("IdContractType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContractType");
                });

            modelBuilder.Entity("SolutionFramework.Entities.Entities.DurationDetail", b =>
                {
                    b.HasOne("SolutionFramework.Entities.Entities.Duration", "Duration")
                        .WithMany("DurationDetail")
                        .HasForeignKey("DurationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Duration");
                });

            modelBuilder.Entity("SolutionFramework.Entities.Entities.OptionListDetail", b =>
                {
                    b.HasOne("SolutionFramework.Entities.Entities.OptionList", "OptionList")
                        .WithMany("Details")
                        .HasForeignKey("IdOptionList")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OptionList");
                });

            modelBuilder.Entity("SolutionFramework.Entities.Entities.Area", b =>
                {
                    b.Navigation("ApproverMatrix");
                });

            modelBuilder.Entity("SolutionFramework.Entities.Entities.Company", b =>
                {
                    b.Navigation("Areas");
                });

            modelBuilder.Entity("SolutionFramework.Entities.Entities.ContractType", b =>
                {
                    b.Navigation("ContractTemplates");
                });

            modelBuilder.Entity("SolutionFramework.Entities.Entities.Duration", b =>
                {
                    b.Navigation("DurationDetail");
                });

            modelBuilder.Entity("SolutionFramework.Entities.Entities.OptionList", b =>
                {
                    b.Navigation("Details");
                });
#pragma warning restore 612, 618
        }
    }
}
